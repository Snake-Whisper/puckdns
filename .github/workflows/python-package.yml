# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master, pipe ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip tox
    - name: Run tox
      env:
        PUCKDNS_PASSWORD: ${{ secrets.PUCKDNS_PASSWORD }}
        PUCKDNS_USERNAME: ${{ secrets.PUCKDNS_USERNAME }}
        PUCKDNS_DOMAIN: ${{ secrets.PUCKDNS_DOMAIN }}
      run: |
        tox
    - name: Upload test coverage results
      run: |
        curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --import # One-time step
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
        curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
        gpg --verify codecov.SHA256SUM.sig codecov.SHA256SUM
        shasum -a 256 -c codecov.SHA256SUM
        chmod +x codecov
        ./codecov

  build-n-publish:
    needs: build
    name: Build and publish Python distributions to PyPI and TestPyPI
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    #- name: Publish distribution to PyPI
    #  if: startsWith(github.ref, 'refs/tags/v')
    #  uses: pypa/gh-action-pypi-publish@master
    #  with:
    #    password: ${{ secrets.PYPI_API_TOKEN }}
